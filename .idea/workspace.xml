<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="5414cf8e-15b5-40fa-aba6-b170d8509d3d" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1Tn08REjLka6bWWcutAmMX507vV" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="DefaultHtmlFileTemplate" value="HTML File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="fileTemplates" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\GO_Space\GO_Space_GOPATH\src\golang-taskschedule\crontab\worker" />
      <recent name="E:\GO_Space\GO_Space_GOPATH\src\golang-taskschedule\prepare\mongodb_usage\demo3" />
      <recent name="E:\GO_Space\GO_Space_GOPATH\src\golang-taskschedule\prepare\etcd_usage" />
      <recent name="E:\GO_Space\GO_Space_GOPATH\src\golang-taskschedule\prepare\etcd_usage\demo2" />
      <recent name="E:\GO_Space\GO_Space_GOPATH\src\golang-taskschedule\prepare\cron_usage\demo2" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\GO_Space\GO_Space_GOPATH\src\golang-taskschedule\crontab\worker\main" />
      <recent name="E:\GO_Space\GO_Space_GOPATH\src\golang-taskschedule\prepare\cron_usage\demo1" />
      <recent name="E:\GO_Space\GO_Space_GOPATH\src\golang-taskschedule\prepare\cmd_usage" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build main.go (1)">
    <configuration name="go build main.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang-taskschedule" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/prepare/cmd_usage/demo2/main.go" />
      <package value="golang-taskschedule" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (3)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang-taskschedule" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/prepare/mongodb_usage/demo4/main.go" />
      <package value="golang-taskschedule" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang-taskschedule" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/prepare/cmd_usage/demo3/main.go" />
      <package value="golang-taskschedule" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build master.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang-taskschedule" />
      <working_directory value="E:/GO_Space/GO_Space_GOPATH/src/golang-taskschedule/crontab/master/main" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/crontab/master/main/master.go" />
      <package value="golang-taskschedule" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build worker.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang-taskschedule" />
      <working_directory value="E:/GO_Space/GO_Space_GOPATH/src/golang-taskschedule/crontab/worker/main" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/crontab/worker/main/worker.go" />
      <package value="golang-taskschedule" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build main.go (3)" />
      <item itemvalue="Go Build.go build master.go" />
      <item itemvalue="Go Build.go build worker.go" />
      <item itemvalue="Go Build.go build main.go" />
      <item itemvalue="Go Build.go build main.go (1)" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build main.go (1)" />
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Go Build.go build worker.go" />
        <item itemvalue="Go Build.go build main.go (3)" />
        <item itemvalue="Go Build.go build master.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>